{"version":3,"sources":["firebase/firebaseConfig.js","hooks/useForm.js","types/types.js","components/actions/ui.js","components/actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/actions/notes.js","components/journal/Sidebar.js","components/journal/NothinSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","helpers/loadNotes.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setvalues","reset","handleInputChange","target","name","value","types","setError","error","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","password2","msgError","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","autoComplete","AuthRouter","exact","path","component","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","activeNote","id","note","Sidebar","signOut","getState","newNote","tite","body","date","Date","getTime","collection","add","doc","NothinSelected","NotesAppBar","NoteScreen","JournalScreen","active","notes","PrivateRouter","isLoggedIn","Component","rest","localStorage","setItem","location","pathname","props","PublicRouter","loadNotes","get","notesSnap","forEach","snapHijo","push","data","AppRouter","checking","setChecking","setIsLoggedIn","useEffect","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cbd9f5f8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBjfxnd73TlrN_6yP4SCNgkvMbyXTCFFyY\",\r\n    authDomain: \"react-curso-udemy-9b1d3.firebaseapp.com\",\r\n    databaseURL: \"https://react-curso-udemy-9b1d3.firebaseio.com\",\r\n    projectId: \"react-curso-udemy-9b1d3\",\r\n    storageBucket: \"react-curso-udemy-9b1d3.appspot.com\",\r\n    messagingSenderId: \"672484412531\",\r\n    appId: \"1:672484412531:web:bb586f0b1276360a96ee06\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore()\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export{\r\n      db,\r\n      googleAuthProvider,\r\n      firebase,\r\n  }\r\n\r\n","import  { useState } from 'react'\r\n// custom hook se encarga de validar los formularios\r\nexport const useForm = (initialState = {}) => {\r\n    \r\n\r\n    const [values, setvalues] = useState(initialState);\r\n\r\n    const reset= () => {\r\n        setvalues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setvalues({\r\n            ...values,\r\n            [target.name] : target.value\r\n        });\r\n    }\r\n\r\n    return [values , handleInputChange, reset]\r\n}\r\n","\r\n\r\nexport const types = {\r\n    \r\n    //auth\r\n    login : '[Auth] Login' ,\r\n    loggout : '[Auth] Logout',\r\n    //Ui Error\r\n    uiSetError : '[UI] Set Error',\r\n    uiRemoveError : '[UI] Remove Error',\r\n    //Ui login\r\n    uiStartLoading : '[UI] Start loading',\r\n    uiFinishLoading : '[UI] Finish loading',\r\n\r\n    //notes\r\n    notesAddNew : '[Notes] New note',\r\n    notesActive : '[Notes] Set active note',\r\n    notesLoad : '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Update note ',\r\n    notesFileUrl: '[Notes] Update image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning : '[Notes] Logout Cleaning'\r\n    \r\n}","import { types } from \"../../types/types\";\r\n\r\n\r\nexport const setError= (error) => ({\r\n\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\nexport const removeError= () => ({\r\n\r\n    type: types.uiRemoveError,\r\n    \r\n})\r\n\r\nexport const startLoading = () => ({\r\n    \r\n    type: types.uiStartLoading,\r\n    payload: true\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    \r\n    type: types.uiFinishLoading,\r\n    payload: false\r\n})","import { types } from \"../../types/types\"\r\nimport {firebase} from '../../firebase/firebaseConfig'\r\nimport { googleAuthProvider } from \"../../firebase/firebaseConfig\";\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nexport const startLoginEmailPassword = (email,password) => {\r\n\r\n    return (dispatch) => {\r\n         \r\n        dispatch(startLoading())\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n        .then(  ({user}) => {\r\n\r\n            \r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n            dispatch(finishLoading())\r\n            \r\n        })\r\n        .catch( e => {\r\n            console.log(e)\r\n            dispatch(finishLoading())\r\n            Swal.fire('Error', e.message, 'error')\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (name,email,password) => {\r\n  return (dispatch) => {\r\n\r\n      firebase.auth().createUserWithEmailAndPassword(email,password)\r\n      .then( async ({user}) => {\r\n\r\n        await  user.updateProfile( { displayName: name})\r\n        \r\n        dispatch(\r\n            login(user.uid, user.displayName)\r\n        )\r\n    })\r\n    .catch( e =>{\r\n        console.log(e)\r\n        Swal.fire('Error', e.message, 'error')\r\n    } )\r\n  }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        \r\n        firebase.auth().signInWithPopup( googleAuthProvider)\r\n        .then ( ({user}) => {\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = (uid,displayName) => ({\r\n // return\r\n        type: types.login,\r\n        payload : {\r\n            uid,\r\n            displayName\r\n        }\r\n\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n\r\n       await  firebase.auth().signOut();\r\n\r\n       dispatch(logout())\r\n        \r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n\r\n    type: types.loggout\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //hook de react redux\r\n    const dispatch = useDispatch()\r\n    const {loading} = useSelector( state => state.ui );\r\n    \r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email:'nando@gmail.com',\r\n        password : '123456'\r\n    })\r\n    const {email,password} = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n         e.preventDefault();\r\n        \r\n         dispatch(startLoginEmailPassword(email,password))\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Login </h3>\r\n            <form onSubmit={handleLogin}>\r\n\r\n                <input type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                value={email}\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}/>\r\n                <input type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}/>\r\n\r\n                <button className=\"btn btn-primary btn-block\"\r\n                 type=\"submit\" \r\n                 disabled={loading}\r\n                 >Login</button>\r\n\r\n                 <hr />\r\n                 <div className=\"auth__social-networks\">\r\n                     <p>Login With Social network </p> \r\n                <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                       <div className=\"google-icon-wrapper\">\r\n                         <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                       </div>\r\n                   <p className=\"btn-text\">\r\n                    <b>Sign in with google</b>\r\n                   </p>\r\n                </div>\r\n                                       \r\n                 </div>\r\n\r\n                 <Link to=\"/auth/register\" className=\"link\">\r\n                     Create New Acountt \r\n                 </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link  } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport validator from 'validator'\r\nimport { setError, removeError } from '../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name:'Hernando',\r\n        email: 'nando@gmail.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    })\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector( state => state.ui );\r\n    console.log(msgError)\r\n    \r\n    const{name,email,password,password2} = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n         e.preventDefault()\r\n\r\n         if(isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(name,email,password))\r\n         }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n           if(name.trim().length === 0){\r\n               const error = \"name is required\"\r\n               dispatch(setError(error))\r\n               return false;\r\n           }\r\n           else if (!validator.isEmail(email)){\r\n               console.log('email no es valido')\r\n               dispatch(setError('email no es valido'))\r\n               return false;\r\n           }\r\n           else if ( password !== password2 || password.length < 5){\r\n               console.log('Minimo 6 caracteres para la contraseña o no concuerdan las passwords')\r\n               dispatch(setError('minimo 6 caracteres'))\r\n               return false;\r\n           }\r\n        \r\n        dispatch( removeError() )\r\n        return true;\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className=\"auth__title\">Register </h3>\r\n            <form onSubmit={handleRegister}>\r\n                {\r\n                    (msgError !== null) &&\r\n                    <div className=\"auth__alert-error\">\r\n                      {msgError}\r\n                    </div>\r\n                }\r\n                \r\n            <input type=\"text\"\r\n                placeholder=\"Name\"\r\n                name=\"name\"\r\n                className=\"auth__input\"\r\n                autoComplete=\"off\"\r\n                onChange={handleInputChange}\r\n                value={name}/>\r\n\r\n                <input type=\"text\"\r\n                placeholder=\"Email\"\r\n                name=\"email\"\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}\r\n                value={email}/>\r\n                <input type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}\r\n                value={password}/>\r\n                <input type=\"password\"\r\n                placeholder=\"Confirm Password \"\r\n                name=\"password2\"\r\n                className=\"auth__input\"\r\n                onChange={handleInputChange}\r\n                value={password2}/>\r\n\r\n\r\n                <button className=\"btn btn-primary btn-block\" type=\"submit\" \r\n                 >Register</button>\r\n\r\n                 <hr />\r\n                \r\n                 <Link to=\"/auth/login\" className=\"link mt-1\">\r\n                     Already Registered ?\r\n                 </Link>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n   \r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n    \r\n  } from \"react-router-dom\";\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n            <Switch>\r\n            <Route exact path=\"/auth/login\" component={ LoginScreen} />\r\n            <Route exact path=\"/auth/register\" component={ RegisterScreen} />\r\n\r\n            <Redirect to =\"/auth/login\" />\r\n            </Switch>\r\n            </div>\r\n        \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const JournalEntry = () => {\r\n    return (\r\n        <div className=\"journal__entry pointer\">\r\n            <div className=\"journal__entry-pictures\"\r\n            style={{\r\n                backgroundSize : 'cover',\r\n                backgroundImage : 'url(https://static1.millenium.gg/articles/9/22/20/9/@/103617-victorialolbien1-article_m-1.jpg)'\r\n                \r\n            }}>\r\n                \r\n            </div>\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    Un nuevo Dia</p>\r\n                    <p className=\"journal__entry-content\">\r\n                       Repreehendr it in duis consetur \r\n                    </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>Monday</span>\r\n                <h4>28</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const entries = [1,2,3,4,5,6,7,8,9,10]\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                entries.map( value => (\r\n                    <JournalEntry key={value} />\r\n                    \r\n                ))\r\n            }\r\n\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../../types/types\"\r\nimport { db } from \"../../firebase/firebaseConfig\";\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async(dispatch,getState) => {\r\n\r\n        const {uid} = getState().auth;\r\n        console.log(uid)\r\n        const newNote = {\r\n            tite:'',\r\n            body:'',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc =  await db.collection(`${ uid }/journal/notes`).add( newNote )\r\n        console.log(doc)\r\n        dispatch(activeNote(doc.id,newNote))\r\n    }\r\n}\r\n\r\nexport const activeNote = (id,note) => ({\r\n\r\n    type : types.notesActive,\r\n    payload : {\r\n        id,\r\n        ...note, \r\n    }\r\n})","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { startLogout } from '../actions/auth';\r\nimport { startNewNote } from '../actions/notes';\r\n\r\nexport const Sidebar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector( state => state.auth );\r\n    \r\n    const handleLogout = (e) => {\r\n       \r\n        dispatch(startLogout())\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n             <h3 className=\"mt-5\">\r\n                 <i className=\"far fa-moon\"/>\r\n                 <span>{name}</span>\r\n             </h3>\r\n             <button className=\"btn\"\r\n             onClick={handleLogout}>Log out</button>\r\n            </div>\r\n  \r\n            <div className=\"journal__new-entry\"\r\n            onClick={handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothinSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Select Something\r\n                <br/>\r\n                pr create an entry ! \r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NotesAppBar = () => {\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n              <span>28 de agosto 2020</span>\r\n              <div>\r\n                  <button className=\"btn\">\r\n                      Picture\r\n                  </button>\r\n                  <button className=\"btn\">\r\n                      SAVE\r\n                  </button>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n            <div className=\"notes__content \">\r\n                  <input type=\"text\"\r\n                  placeholder=\"Some awesome title\"\r\n                  className=\"notes__title-input\"/> \r\n                  <textarea \r\n                  placeholder=\"what happened today\"\r\n                  className=\"notes__textarea\">\r\n\r\n                  </textarea>\r\n                  <div className=\"notes__image\">\r\n                      <img \r\n                      alt=\"imagen\"\r\n                      src=\"https://www.12minutos.com/thumb/4/6/9/3/0/6/6930670edbfc237b7c83f20ae6c87c7d.jpg\"/>\r\n                  </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothinSelected } from './NothinSelected'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector( state => state.notes );\r\n    return (\r\n        \r\n        <div className=\"journal__main-content\">\r\n           <Sidebar />\r\n          \r\n           <main>\r\n               {\r\n                   (active)\r\n                   ? (  <NoteScreen />)\r\n                   : <NothinSelected />\r\n               }\r\n               \r\n              \r\n           </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ({\r\n    isLoggedIn,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    localStorage.setItem('lastPath', rest.location.pathname)\r\n \r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/login\" />)\r\n        )}\r\n        />\r\n    )\r\n        \r\n}  \r\n\r\n\r\nPrivateRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouter = ({\r\n    isLoggedIn,\r\n    component : Component ,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            (!isLoggedIn)\r\n            ? (<Component {...props} />)\r\n            : (<Redirect to =\"/\" />)\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRouter.propTypes = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n}\r\n","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n \r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    \r\n    return notes;\r\n}","import React , {useEffect, useState}from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n    \r\n  } from \"react-router-dom\";\r\n  import {firebase} from '../firebase/firebaseConfig'\r\n  import {useDispatch} from 'react-redux'\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../components/actions/auth';\r\nimport { PrivateRouter } from './PrivateRoute';\r\nimport { PublicRouter } from './PublicRoute';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\n  \r\n\r\nexport const AppRouter = () => {\r\n \r\n    const dispatch = useDispatch();\r\n\r\n     const [checking, setChecking] = useState(true)\r\n     const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n\r\n            if(user?.uid){\r\n                dispatch(login(user.uid,user.displayName))\r\n                setIsLoggedIn(true)\r\n                loadNotes(user.uid)\r\n            }\r\n            else{\r\n                setIsLoggedIn(false)\r\n            }\r\n\r\n            setChecking(false)\r\n            \r\n        })\r\n    }, [dispatch,setChecking,setIsLoggedIn])      \r\n\r\n    if (checking){\r\n       return <h1> Wait...</h1>\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n        <div>\r\n\r\n            <Switch>\r\n                <PublicRouter isLoggedIn={isLoggedIn} path=\"/auth\" component={ AuthRouter}/>\r\n                <PrivateRouter isLoggedIn={isLoggedIn} exact path=\"/\" component={ JournalScreen} />\r\n                \r\n                <Redirect to =\"/auth/login\" />\r\n             </Switch>\r\n\r\n        </div>\r\n         \r\n    </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError : null\r\n}\r\n\r\nexport const uiReducer = (state = initialState , action) => {\r\n   \r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return{\r\n                 ...state,\r\n                 msgError : action.payload\r\n            }\r\n\r\n\r\n        case types.uiRemoveError :\r\n            return{\r\n\r\n                ...state,\r\n                msgError: null\r\n            }  \r\n            \r\n        case types.uiStartLoading:\r\n            return{\r\n                loading: true\r\n            } \r\n            \r\n        case types.uiFinishLoading:\r\n            return{\r\n                loading : false\r\n            }    \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\n\r\n/*\r\n\r\n   {\r\n     notes [],\r\n     active : {\r\n         id:kasdfad123131,\r\n         title :'',\r\n         imageUrl: '',\r\n         date: 12314313\r\n     }\r\n   }\r\n\r\n*/\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes : [ ],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n     \r\n    case types.notesActive :\r\n      return {\r\n          ...state,\r\n          active: {\r\n            ...action.payload\r\n          }\r\n      }\r\n      default:\r\n          return state;\r\n  }\r\n}","import {createStore,combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth : authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n    );","import { types } from \"../types/types\";\r\n\r\n/*\r\n\r\n   {\r\n\r\n    uid: asdfasdfasdf ,\r\n    name : 'fernando'\r\n   }\r\n\r\n*/\r\nexport const authReducer = ( state = {} , action) => {\r\n\r\n   switch (action.type) {\r\n       case types.login:\r\n           return{\r\n                 uid: action.payload.uid,\r\n                 name: action.payload.displayName\r\n           }\r\n\r\n        case types.loggout :\r\n            return{ }    \r\n       default:\r\n           return state;\r\n   }\r\n\r\n}","import React from 'react'\r\nimport {Provider} from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = {store} >\r\n            <AppRouter/>\r\n        </Provider>       \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss'\nimport { JournalApp } from './JournalApp';\n\nReactDOM.render(\n \n    <JournalApp />,\n \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}